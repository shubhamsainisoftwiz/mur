"use strict";
(self["webpackChunkngx_admin_demo"] = self["webpackChunkngx_admin_demo"] || []).push([["default-node_modules_ng2-ckeditor___ivy_ngcc___fesm2015_ng2-ckeditor_js"],{

/***/ 76442:
/*!*************************************************************************!*\
  !*** ./node_modules/ng2-ckeditor/__ivy_ngcc__/fesm2015/ng2-ckeditor.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CKEditorModule": () => (/* binding */ CKEditorModule),
/* harmony export */   "ɵa": () => (/* binding */ CKEditorComponent),
/* harmony export */   "ɵb": () => (/* binding */ CKButtonDirective),
/* harmony export */   "ɵc": () => (/* binding */ CKGroupDirective)
/* harmony export */ });
/* harmony import */ var C_Users_dev_softwiz_007_Desktop_New_folder_2_MUR_FrontEnd_master_MUR_FrontEnd_master_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classCallCheck_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/classCallCheck.js */ 56213);
/* harmony import */ var C_Users_dev_softwiz_007_Desktop_New_folder_2_MUR_FrontEnd_master_MUR_FrontEnd_master_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_createClass_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/createClass.js */ 28551);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 94650);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common */ 36895);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ 24006);






/**
 * CKGroup component
 * Usage :
 *  <ckeditor [(ngModel)]="data" [config]="{...}" debounce="500">
 *      <ckbutton [name]="'SaveButton'" [command]="'saveCommand'" (click)="save($event)"
 *                [icon]="'/save.png'" [toolbar]="'customGroup,1'" [label]="'Save'">
 *      </ckbutton>
 *   </ckeditor>
 */

var _c0 = ["host"];
var CKButtonDirective = /*#__PURE__*/function () {
  function CKButtonDirective() {
    (0,C_Users_dev_softwiz_007_Desktop_New_folder_2_MUR_FrontEnd_master_MUR_FrontEnd_master_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classCallCheck_js__WEBPACK_IMPORTED_MODULE_0__["default"])(this, CKButtonDirective);
    this.click = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
  }
  (0,C_Users_dev_softwiz_007_Desktop_New_folder_2_MUR_FrontEnd_master_MUR_FrontEnd_master_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_createClass_js__WEBPACK_IMPORTED_MODULE_1__["default"])(CKButtonDirective, [{
    key: "initialize",
    value: function initialize(editor) {
      var _this = this;
      editor.instance.addCommand(this.command, {
        exec: function exec(evt) {
          _this.click.emit(evt);
        }
      });
      editor.instance.ui.addButton(this.name, {
        label: this.label,
        command: this.command,
        toolbar: this.toolbar,
        icon: this.icon
      });
    }
  }, {
    key: "ngOnInit",
    value: function ngOnInit() {
      if (!this.name) throw new Error('Attribute "name" is required on <ckbutton>');
      if (!this.command) throw new Error('Attribute "command" is required on <ckbutton>');
    }
  }]);
  return CKButtonDirective;
}();
CKButtonDirective.ɵfac = function CKButtonDirective_Factory(t) {
  return new (t || CKButtonDirective)();
};
CKButtonDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineDirective"]({
  type: CKButtonDirective,
  selectors: [["ckbutton"]],
  inputs: {
    label: "label",
    command: "command",
    toolbar: "toolbar",
    name: "name",
    icon: "icon"
  },
  outputs: {
    click: "click"
  }
});
CKButtonDirective.propDecorators = {
  click: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
  }],
  label: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
  }],
  command: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
  }],
  toolbar: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
  }],
  name: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
  }],
  icon: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
  }]
};
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](CKButtonDirective, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Directive,
    args: [{
      selector: 'ckbutton'
    }]
  }], function () {
    return [];
  }, {
    click: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
    }],
    label: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    command: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    toolbar: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    name: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    icon: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }]
  });
})();

/**
 * CKGroup component
 * Usage :
 *  <ckeditor [(ngModel)]="data" [config]="{...}" debounce="500">
 *      <ckgroup [name]="'exampleGroup2'" [previous]="'1'" [subgroupOf]="'exampleGroup1'">
 *          .
 *          .
 *      </ckgroup>
 *   </ckeditor>
 */
var CKGroupDirective = /*#__PURE__*/function () {
  function CKGroupDirective() {
    (0,C_Users_dev_softwiz_007_Desktop_New_folder_2_MUR_FrontEnd_master_MUR_FrontEnd_master_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classCallCheck_js__WEBPACK_IMPORTED_MODULE_0__["default"])(this, CKGroupDirective);
  }
  (0,C_Users_dev_softwiz_007_Desktop_New_folder_2_MUR_FrontEnd_master_MUR_FrontEnd_master_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_createClass_js__WEBPACK_IMPORTED_MODULE_1__["default"])(CKGroupDirective, [{
    key: "ngAfterContentInit",
    value: function ngAfterContentInit() {
      var _this2 = this;
      // Reconfigure each button's toolbar property within ckgroup to hold its parent's name
      this.toolbarButtons.forEach(function (button) {
        return button.toolbar = _this2.name;
      });
    }
  }, {
    key: "initialize",
    value: function initialize(editor) {
      editor.instance.ui.addToolbarGroup(this.name, this.previous, this.subgroupOf);
      // Initialize each button within ckgroup
      this.toolbarButtons.forEach(function (button) {
        button.initialize(editor);
      });
    }
  }]);
  return CKGroupDirective;
}();
CKGroupDirective.ɵfac = function CKGroupDirective_Factory(t) {
  return new (t || CKGroupDirective)();
};
CKGroupDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineDirective"]({
  type: CKGroupDirective,
  selectors: [["ckgroup"]],
  contentQueries: function CKGroupDirective_ContentQueries(rf, ctx, dirIndex) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵcontentQuery"](dirIndex, CKButtonDirective, 4);
    }
    if (rf & 2) {
      var _t;
      _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵloadQuery"]()) && (ctx.toolbarButtons = _t);
    }
  },
  inputs: {
    name: "name",
    previous: "previous",
    subgroupOf: "subgroupOf"
  }
});
CKGroupDirective.propDecorators = {
  name: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
  }],
  previous: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
  }],
  subgroupOf: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
  }],
  toolbarButtons: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.ContentChildren,
    args: [CKButtonDirective]
  }]
};
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](CKGroupDirective, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Directive,
    args: [{
      selector: 'ckgroup'
    }]
  }], null, {
    name: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    previous: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    subgroupOf: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    toolbarButtons: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.ContentChildren,
      args: [CKButtonDirective]
    }]
  });
})();

// Imports
/**
 * CKEditor component
 * Usage :
 *  <ckeditor [(ngModel)]="data" [config]="{...}" debounce="500"></ckeditor>
 */
var CKEditorComponent = /*#__PURE__*/function () {
  /**
   * Constructor
   */
  function CKEditorComponent(zone) {
    (0,C_Users_dev_softwiz_007_Desktop_New_folder_2_MUR_FrontEnd_master_MUR_FrontEnd_master_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classCallCheck_js__WEBPACK_IMPORTED_MODULE_0__["default"])(this, CKEditorComponent);
    this.zone = zone;
    this.change = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
    this.editorChange = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
    this.ready = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
    this.blur = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
    this.focus = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
    this.contentDom = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
    this.fileUploadRequest = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
    this.fileUploadResponse = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
    this.paste = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
    this.drop = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
    this._value = '';
  }
  (0,C_Users_dev_softwiz_007_Desktop_New_folder_2_MUR_FrontEnd_master_MUR_FrontEnd_master_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_createClass_js__WEBPACK_IMPORTED_MODULE_1__["default"])(CKEditorComponent, [{
    key: "value",
    get: function get() {
      return this._value;
    },
    set: function set(v) {
      if (v !== this._value) {
        this._value = v;
        this.onChange(v);
      }
    }
  }, {
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      if (changes.readonly && this.instance) {
        this.instance.setReadOnly(changes.readonly.currentValue);
      }
    }
    /**
     * On component destroy
     */
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      if (this.instance) {
        this.instance.removeAllListeners();
        CKEDITOR.instances[this.instance.name].destroy();
        this.instance.destroy();
        this.instance = null;
      }
    }
    /**
     * On component view init
     */
  }, {
    key: "ngAfterViewInit",
    value: function ngAfterViewInit() {
      this.ckeditorInit(this.config || {});
    }
    /**
     * On component view checked
     */
  }, {
    key: "ngAfterViewChecked",
    value: function ngAfterViewChecked() {
      this.ckeditorInit(this.config || {});
    }
    /**
     * Value update process
     */
  }, {
    key: "updateValue",
    value: function updateValue(value) {
      var _this3 = this;
      this.zone.run(function () {
        _this3.value = value;
        _this3.onChange(value);
        _this3.onTouched();
        _this3.change.emit(value);
      });
    }
    /**
     * CKEditor init
     */
  }, {
    key: "ckeditorInit",
    value: function ckeditorInit(config) {
      var _this4 = this;
      if (typeof CKEDITOR === 'undefined') {
        console.warn('CKEditor 4.x is missing (http://ckeditor.com/)');
      } else {
        // Check textarea exists
        if (this.instance || !this.documentContains(this.host.nativeElement)) {
          return;
        }
        if (this.readonly) {
          config.readOnly = this.readonly;
        }
        // CKEditor replace textarea
        this.instance = CKEDITOR.replace(this.host.nativeElement, config);
        // Set initial value
        this.instance.setData(this.value);
        // listen for instanceReady event
        this.instance.on('instanceReady', function (evt) {
          // if value has changed while instance loading
          // update instance with current component value
          if (_this4.instance.getData() !== _this4.value) {
            _this4.instance.setData(_this4.value);
          }
          // send the evt to the EventEmitter
          _this4.ready.emit(evt);
        });
        // CKEditor change event
        this.instance.on('change', function (evt) {
          _this4.onTouched();
          var value = _this4.instance.getData();
          if (_this4.value !== value) {
            // Debounce update
            if (_this4.debounce) {
              if (_this4.debounceTimeout) clearTimeout(_this4.debounceTimeout);
              _this4.debounceTimeout = setTimeout(function () {
                _this4.updateValue(value);
                _this4.debounceTimeout = null;
              }, parseInt(_this4.debounce));
              // Live update
            } else {
              _this4.updateValue(value);
            }
          }
          // Original ckeditor event dispatch
          _this4.editorChange.emit(evt);
        });
        // CKEditor blur event
        this.instance.on('blur', function (evt) {
          _this4.blur.emit(evt);
        });
        // CKEditor focus event
        this.instance.on('focus', function (evt) {
          _this4.focus.emit(evt);
        });
        // CKEditor contentDom event
        this.instance.on('contentDom', function (evt) {
          _this4.contentDom.emit(evt);
        });
        // CKEditor fileUploadRequest event
        this.instance.on('fileUploadRequest', function (evt) {
          _this4.fileUploadRequest.emit(evt);
        });
        // CKEditor fileUploadResponse event
        this.instance.on('fileUploadResponse', function (evt) {
          _this4.fileUploadResponse.emit(evt);
        });
        // CKEditor paste event
        this.instance.on('paste', function (evt) {
          _this4.paste.emit(evt);
        });
        // CKEditor drop event
        this.instance.on('drop', function (evt) {
          _this4.drop.emit(evt);
        });
        // Add Toolbar Groups to Editor. This will also add Buttons within groups.
        this.toolbarGroups.forEach(function (group) {
          group.initialize(_this4);
        });
        // Add Toolbar Buttons to Editor.
        this.toolbarButtons.forEach(function (button) {
          button.initialize(_this4);
        });
      }
    }
    /**
     * Implements ControlValueAccessor
     */
  }, {
    key: "writeValue",
    value: function writeValue(value) {
      this._value = value;
      if (this.instance) this.instance.setData(value);
    }
  }, {
    key: "onChange",
    value: function onChange(_) {}
  }, {
    key: "onTouched",
    value: function onTouched() {}
  }, {
    key: "registerOnChange",
    value: function registerOnChange(fn) {
      this.onChange = fn;
    }
  }, {
    key: "registerOnTouched",
    value: function registerOnTouched(fn) {
      this.onTouched = fn;
    }
  }, {
    key: "documentContains",
    value: function documentContains(node) {
      return document.contains ? document.contains(node) : document.body.contains(node);
    }
  }]);
  return CKEditorComponent;
}();
CKEditorComponent.ɵfac = function CKEditorComponent_Factory(t) {
  return new (t || CKEditorComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_2__.NgZone));
};
CKEditorComponent.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineComponent"]({
  type: CKEditorComponent,
  selectors: [["ckeditor"]],
  contentQueries: function CKEditorComponent_ContentQueries(rf, ctx, dirIndex) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵcontentQuery"](dirIndex, CKButtonDirective, 4);
      _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵcontentQuery"](dirIndex, CKGroupDirective, 4);
    }
    if (rf & 2) {
      var _t;
      _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵloadQuery"]()) && (ctx.toolbarButtons = _t);
      _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵloadQuery"]()) && (ctx.toolbarGroups = _t);
    }
  },
  viewQuery: function CKEditorComponent_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵviewQuery"](_c0, 5);
    }
    if (rf & 2) {
      var _t;
      _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵloadQuery"]()) && (ctx.host = _t.first);
    }
  },
  inputs: {
    value: "value",
    config: "config",
    readonly: "readonly",
    debounce: "debounce"
  },
  outputs: {
    change: "change",
    editorChange: "editorChange",
    ready: "ready",
    blur: "blur",
    focus: "focus",
    contentDom: "contentDom",
    fileUploadRequest: "fileUploadRequest",
    fileUploadResponse: "fileUploadResponse",
    paste: "paste",
    drop: "drop"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵProvidersFeature"]([{
    provide: _angular_forms__WEBPACK_IMPORTED_MODULE_3__.NG_VALUE_ACCESSOR,
    useExisting: (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function () {
      return CKEditorComponent;
    }),
    multi: true
  }]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵNgOnChangesFeature"]],
  decls: 2,
  vars: 0,
  consts: [["host", ""]],
  template: function CKEditorComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](0, "textarea", null, 0);
    }
  },
  encapsulation: 2
});
CKEditorComponent.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.NgZone
  }];
};
CKEditorComponent.propDecorators = {
  config: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
  }],
  readonly: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
  }],
  debounce: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
  }],
  change: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
  }],
  editorChange: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
  }],
  ready: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
  }],
  blur: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
  }],
  focus: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
  }],
  contentDom: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
  }],
  fileUploadRequest: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
  }],
  fileUploadResponse: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
  }],
  paste: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
  }],
  drop: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
  }],
  host: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.ViewChild,
    args: ['host', {
      "static": false
    }]
  }],
  toolbarButtons: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.ContentChildren,
    args: [CKButtonDirective]
  }],
  toolbarGroups: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.ContentChildren,
    args: [CKGroupDirective]
  }],
  value: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
  }]
};
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](CKEditorComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Component,
    args: [{
      selector: 'ckeditor',
      providers: [{
        provide: _angular_forms__WEBPACK_IMPORTED_MODULE_3__.NG_VALUE_ACCESSOR,
        useExisting: (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(function () {
          return CKEditorComponent;
        }),
        multi: true
      }],
      template: "<textarea #host></textarea>"
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.NgZone
    }];
  }, {
    change: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
    }],
    editorChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
    }],
    ready: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
    }],
    blur: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
    }],
    focus: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
    }],
    contentDom: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
    }],
    fileUploadRequest: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
    }],
    fileUploadResponse: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
    }],
    paste: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
    }],
    drop: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
    }],
    value: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    config: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    readonly: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    debounce: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    host: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.ViewChild,
      args: ['host', {
        "static": false
      }]
    }],
    toolbarButtons: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.ContentChildren,
      args: [CKButtonDirective]
    }],
    toolbarGroups: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.ContentChildren,
      args: [CKGroupDirective]
    }]
  });
})();

/**
 * CKEditorModule
 */
var CKEditorModule = /*#__PURE__*/(0,C_Users_dev_softwiz_007_Desktop_New_folder_2_MUR_FrontEnd_master_MUR_FrontEnd_master_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_createClass_js__WEBPACK_IMPORTED_MODULE_1__["default"])(function CKEditorModule() {
  (0,C_Users_dev_softwiz_007_Desktop_New_folder_2_MUR_FrontEnd_master_MUR_FrontEnd_master_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classCallCheck_js__WEBPACK_IMPORTED_MODULE_0__["default"])(this, CKEditorModule);
});
CKEditorModule.ɵfac = function CKEditorModule_Factory(t) {
  return new (t || CKEditorModule)();
};
CKEditorModule.ɵmod = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineNgModule"]({
  type: CKEditorModule
});
CKEditorModule.ɵinj = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjector"]({
  imports: [_angular_common__WEBPACK_IMPORTED_MODULE_4__.CommonModule]
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](CKEditorModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.NgModule,
    args: [{
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_4__.CommonModule],
      declarations: [CKEditorComponent, CKButtonDirective, CKGroupDirective],
      exports: [CKEditorComponent, CKButtonDirective, CKGroupDirective]
    }]
  }], null, null);
})();
(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵsetNgModuleScope"](CKEditorModule, {
    declarations: function declarations() {
      return [CKEditorComponent, CKButtonDirective, CKGroupDirective];
    },
    imports: function imports() {
      return [_angular_common__WEBPACK_IMPORTED_MODULE_4__.CommonModule];
    },
    exports: function exports() {
      return [CKEditorComponent, CKButtonDirective, CKGroupDirective];
    }
  });
})();

/**
 * Generated bundle index. Do not edit.
 */



//# sourceMappingURL=ng2-ckeditor.js.map

/***/ })

}]);